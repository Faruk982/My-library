/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;

/**
 *
 * @author Umar Faruk Shuvo
 */
public class Borrow extends javax.swing.JFrame {

    /**
     * Creates new form Borrow
     */
    String bookName,author,publisher,Edition,code,email,password;
    public Borrow(String ee,String bookName, String author, String publisher, String Edition, String code) {
        this.bookName=bookName;
         this.author=author;this.email=ee;
          this.publisher=publisher;
          this.Edition=Edition;
           this.code=code;
        initComponents();
    }

    public Borrow() {
         initComponents();
      //  throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Found");

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Do You Want to borrow this Book?");

        jButton1.setText("No");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Yes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Today's Date");

        dateField.setToolTipText("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(95, 95, 95))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel3)
                        .addGap(57, 57, 57)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/student";
        String user = "root";
        String dpassword = "";
     //  email = txtemail1.getText(); 
       //password = dateField.getText();
       boolean entry=true;
        String inputDateStr = dateField.getText();
        String newDateStr="";
       try {
            // Parse the input date string into a Date object
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date inputDate = sdf.parse(inputDateStr);

            // Check if the parsed date is valid
            if (isValidDate(inputDateStr)) {
                // Create a Calendar instance and set it to the input date
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(inputDate);

                // Add 15 days to the date
                calendar.add(Calendar.DAY_OF_MONTH, 15);

                // Format the new date as a string
                Date newDate = calendar.getTime();
                 newDateStr = sdf.format(newDate);

                System.out.println("Input Date: " + inputDateStr);
                System.out.println("New Date After Adding 15 Days: " + newDateStr);
            } else {
                System.out.println("Invalid input date.");
            }
        } catch (ParseException e) {
            entry=false;
             JOptionPane.showMessageDialog(Borrow.this, "Invalid date: " + inputDateStr, "Date Validation", JOptionPane.ERROR_MESSAGE);
            System.out.println("Invalid date format: " + inputDateStr);
        }
                     
    if(entry){
            if (verifyLogin(email)) {
       try (Connection connection = DriverManager.getConnection(url, user, dpassword)) {
    String deleteQuery = "DELETE FROM books WHERE Name = ? AND Author = ? AND Publisher = ? AND Code = ? AND Edition = ?";
    try (PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
        preparedStatement.setString(1, bookName);
        preparedStatement.setString(2, author);
        preparedStatement.setString(3, publisher);
        preparedStatement.setString(4, code);
        preparedStatement.setString(5, Edition);
        int deletedRows = preparedStatement.executeUpdate();
        
        if (deletedRows > 0) {
            System.out.println("Book deleted successfully.");
           insertDeletionInfo(connection,email, bookName, author, publisher, code, Edition,inputDateStr,"","");
             BOOK homeFrame = new BOOK(email);
            homeFrame.setVisible(true);
            homeFrame.pack();
            homeFrame.setLocationRelativeTo(null);
            dispose();
         //   Connection connection, String bookName, String author, String publisher, String code, String edition,String fine
        } else {
            System.out.println("Book not found or deletion failed.");
        }
    }
} catch (SQLException e) {
    e.printStackTrace();
}

        } else {
            JOptionPane.showMessageDialog(Borrow.this, "Invalid email or password. Please try again."+email, "Login Failed", JOptionPane.ERROR_MESSAGE);
        }
    }
        // Book details to be deleted
//        String bookName = "Book Title";
//        String author = "Author Name";
//        String publisher = "Publisher Name";
//        String code = "Book Code";
//        String edition = "Book Edition";

    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          BOOK homeFrame = new BOOK(email);
            homeFrame.setVisible(true);
            homeFrame.pack();
            homeFrame.setLocationRelativeTo(null);
            dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
private boolean verifyLogin(String email) {
         String url = "jdbc:mysql://localhost:3306/student";
        String duser = "root";
        String dpassword = "";

        try (Connection connection = DriverManager.getConnection(url, duser, dpassword)) {
            String query = "SELECT * FROM faruk WHERE `E-mail` = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, email);
             //   preparedStatement.setString(2, password);

                try (ResultSet resultSet = preparedStatement.executeQuery()) {
//                    if (resultSet.next()) {
////                    // Retrieve user information
////                    String department = resultSet.getString("Department");
////                    int batch = resultSet.getInt("Batch");
////                    String name = resultSet.getString("Name");
////                    int roll = resultSet.getInt("Roll");
//
//                    // Create a User object with the information
//                   // user= new User( email, name,department, batch, roll, password);
//                }
                    return resultSet.next(); // If a matching record is found, return true
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
private boolean isValidDate(String date) {
        try {
            java.sql.Date.valueOf(date);
            return true;
        } catch (IllegalArgumentException e) {
            return false;
        }
    }
private static void insertDeletionInfo(Connection connection,String email, String bookName, String author, String publisher, String code, String edition,String today,String returning,String fine) throws SQLException {
        String insertHistoryQuery = "INSERT INTO history (`E-mail` ,`Name`, `Author`, `publisher`, `Code`, `Edition`, `Taken_date`,`Returning_date`,`Fine`) VALUES (?, ?, ?, ?, ?, ?,?,?,?)";
        try (PreparedStatement historyStatement = connection.prepareStatement(insertHistoryQuery)) {
            historyStatement.setString(1, email);
            historyStatement.setString(2, bookName);
            historyStatement.setString(3, author);
            historyStatement.setString(4, publisher);
            historyStatement.setString(5, code);
             historyStatement.setString(6, edition);
             historyStatement.setString(7, today);
            historyStatement.setString(8, returning);
             historyStatement.setString(9, fine);
            historyStatement.executeUpdate();
            System.out.println("Book information added to history.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Borrow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dateField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
